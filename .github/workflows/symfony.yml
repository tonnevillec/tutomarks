# https://help.github.com/en/actions
name: Full CI process for Symfony 6
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
env:
  ES_HTTP_PORT: 9209
jobs:
  symfony:
    name: Symfony 6.1 (PHP ${{ matrix.php-versions }})
    # https://hub.docker.com/_/ubuntu/
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.1']
        node-version: [16]

    steps:
      # —— Setup Github actions 🐙 —————————————————————————————————————————————
      # https://github.com/actions/checkout (official)
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo
        env:
          update: true

      - name: Check PHP Version
        run: php -v

      # https://github.com/zhulik/redis-action (community)
      - name: Setup Redis with zhulik/redis-action
        uses: zhulik/redis-action@1.1.0
        with:
          redis version: '5'

      ## —— NPM 🐱 ————————————————————————————————————————————————————————————
      - name: Checkout
        uses: actions/checkout@master

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}
      - name: Upgrade NPM
        run: npm install -g npm
      - name: NPM install build
        run: |
          npm ci
          npm run build --if-present
          npm t

      ## —— Yarn 🐱 ————————————————————————————————————————————————————————————
#      - name: Yarn install
#        uses: actions/setup-node@v2
#        with:
#          node-version: '12'
#          registry-url: npm.fontawesome.com
#      - run: yarn install
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}
#
#      - name: Yarn build
#        run: yarn run encore production

      # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: make composer-install

      # —— Symfony 🎵 ——————————————————————————————————————————————————————————
#      - name: Check Symfony requirements
#        run: vendor/bin/requirements-checker

      - name: Check the Symfony console
        run: |
          bin/console about

      ## —— Coding standards ✨ ————————————————————————————————————————————————
      # Can't handle PHP8 for now
      - name: Coding standards checks (php_codesniffer + php-cs-fixer)
        run: /usr/bin/php8.1 ./vendor/bin/php-cs-fixer fix --allow-risky=yes --dry-run

      ## —— Static analysis ✨ —————————————————————————————————————————————————
      - name: Static analysis of PHP code (PHPStan)
        run: /usr/bin/php8.1 ./vendor/bin/phpstan analyse src --memory-limit 1G